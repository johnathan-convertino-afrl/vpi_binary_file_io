CAPI=2:

name: AFRL:vpi:binary_file_io:1.0.0
description: VPI core for reading and writing binary files by byte widths only.

filesets:
  src :
    files : 
      - src/read_binary_file.c  : {file_type : cSource}
      - src/write_binary_file.c : {file_type : cSource}
      - src/binary_file_io.c    : {file_type : cSource}
      - src/binary_file_io.h    : {file_type : cSource, is_include_file : true}
      - src/read_binary_file.h  : {file_type : cSource, is_include_file : true}
      - src/write_binary_file.h : {file_type : cSource, is_include_file : true}
      - src/binary_file_io.sft  : {file_type : user}
  
  lib :
    files :
      - lib_ringbuffer/build/libringBuffer.a : {file_type : user, copyto : .}
      
  header :
    files :
      - lib_ringbuffer/ringBuffer.h : {file_type : cSource, is_include_file : true}
  
  tb:
    files:
      - tb/tb_vpi.v : {file_type : verilogSource}
      
  dep_tb:
    depend:
      - AFRL:utility:sim_helper
      
  dep_gen:
    depend:
      - AFRL:utility:generators:0.0.0
    
vpi:
  bin_file_io_vpi:
    filesets : [src, header]
    libs : [ringBuffer -L., pthread]
  
generate:
  gen_git:
    generator: git_pull
    parameters:
      repo_url: [https://github.com/sparkletron/C89_pthread_ring_buffer.git]
      repo_dir: [lib_ringbuffer]
      tag: [release_v1.5.1]
  gen_lib:
    generator: vpilibcmake
    parameters:
      src_dirs:  [lib_ringbuffer]
      cmake_args: "-DCMAKE_POSITION_INDEPENDENT_CODE=ON"
      
targets:
  default: &default
    description: Intergration default target for simulations.
    filesets: [lib, dep_gen]
    generate: [gen_git, gen_lib]
    vpi: [bin_file_io_vpi]
    
  sim: &sim
    <<: *default
    description: Test VPI file io.
    default_tool: icarus
    filesets_append: [tb, dep_tb]
    hooks:
      post_run: ["tool_icarus ? (file_check_icarus)"]
    toplevel: tb_vpi
    parameters:
      - IN_FILE_NAME
      - OUT_FILE_NAME
    
  sim_rand_data:
    <<: *sim
    description: Test VPI file io with random data.
    parameters:
      - IN_FILE_NAME=random.bin
      - OUT_FILE_NAME=out_random.bin
      
  sim_8bit_count_data:
    <<: *sim
    description: Test VPI file io with count data.
    parameters:
      - IN_FILE_NAME=8bit_count.bin
      - OUT_FILE_NAME=out_8bit_count.bin
      
parameters:   
  IN_FILE_NAME:
    datatype    : file
    default     : const_data.bin
    description : input file name
    paramtype   : vlogparam

  OUT_FILE_NAME:
    datatype    : file
    default     : out_const_data.bin
    description : output file name
    paramtype   : vlogparam

scripts:
  file_check_icarus:
    cmd : [python3, file_check.py, icarus]
